server.port=6060
#spring.application.index=/admin/index.html
#logging.level.org.springframework=DEBUG



# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/crewlink_db_0_5?createDatabaseIfNotExist=true

spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName=com.mysql.jdbc.Driver


# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
 spring.jpa.show-sql = true

#validate: validate the schema, makes no changes to the database.
#update: update the schema.
#create: creates the schema, destroying previous data.
#create-drop: drop the schema at the end of the session.

# Hibernate ddl auto (none,validate,create, create-drop, update)
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = validate
#spring.jpa.hibernate.ddl-auto = create-drop
#spring.jpa.hibernate.ddl-auto = create
#spring.datasource.data=classpath:/database/extra_small_database_data.sql
#spring.datasource.data=classpath:/database/extra_small_database_data.sql
#spring.datasource.data=classpath:/database/init-data.sql
#spring.datasource.data=classpath:/database/full_database_data.sql

# Set base uri for rest repository
spring.data.rest.base-path = api

# Return a response Body after creating and updating an entity
spring.data.rest.return-body-on-create = true
spring.data.rest.return-body-on-update = true

# Max file size.
multipart.max-file-size=991049740
 # Max request size.
multipart.max-request-size=991759908

spring.datasource.initialSize=50
spring.datasource.maxActive=200
spring.datasource.maxIdle=200
spring.datasource.minIdle=50
#spring.session.store-type=none

#management.security.enabled=false
#security.basic.enabled=false

security.user.name=user
security.user.password=user123
security.user.role=ADMIN


###----------------------------------MONGO-----------------------
spring.data.mongodb.host=127.0.0.1
spring.data.mongodb.port=27017 
spring.data.mongodb.database=crewlink_db
spring.data.mongodb.username=root
spring.data.mongodb.password=root123
spring.data.mongodb.repositories.enabled=true 
spring.data.mongodb.authentication-database= crewlink_db
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
#spring.data.mongodb.uri=mongodb://127.0.0.1/root:root123:crewlink
#spring.data.mongodb.uri=mongodb://root:root123:crewlink,root:root123/crewlink

#spring:
 #   data:
  #      mongodb:
   #         host: localhost
    #        port: 27017
     #       database: crewlink_db 
      #      username: root
       #     password: root123
        #     repositories:
        #	enabled: true
      		#authentication-database: admin
            
            # OR

#spring:
 #   data:
  #      mongodb:
   #         uri:mongodb://develop:pass@localhost:27017/SHAM_TEST
   
   
logging.level.org.springframework.web=INFO
logging.level.guru.springframework.blogs.controllers=INFO
logging.level.org.hibernate=ERROR
logging.file=logs/spring-boot-logging.log
   